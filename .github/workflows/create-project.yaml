name: Create Project from JSON

on:
  push:
    branches: [master]
    paths: ['projects/*.json']

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        pip install cookiecutter jq

    - name: Install GitHub CLI
      run: |
        type -p curl >/dev/null || (sudo apt update && sudo apt install curl -y)
        curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg \
        && sudo chmod go+r /usr/share/keyrings/githubcli-archive-keyring.gpg \
        && echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null \
        && sudo apt update \
        && sudo apt install gh -y

    - name: Process JSON files
      env:
        GH_TOKEN: ${{ secrets.GH_TOKEN }}
      run: |
        # Tüm JSON dosyalarını işle
        for JSON_FILE in projects/*.json; do
          if [ -f "$JSON_FILE" ]; then
            echo "Processing $JSON_FILE"
            
            # JSON'dan değişkenleri oku
            PROJECT_NAME=$(jq -r '.project_name' "$JSON_FILE")
            PROJECT_TYPE=$(jq -r '.project_type' "$JSON_FILE")
            DESCRIPTION=$(jq -r '.description' "$JSON_FILE")
            AUTHOR=$(jq -r '.author' "$JSON_FILE")

            # Hata kontrolü: PROJECT_NAME boş mu?
            if [ -z "$PROJECT_NAME" ]; then
              echo "Error: PROJECT_NAME is empty in $JSON_FILE"
              exit 1
            fi

            # Şablon seç
            case "$PROJECT_TYPE" in
              "llm")
                TEMPLATE="https://github.com/dogukan1047/llm-boilerplate.git"
                ;;
              "ml")
                TEMPLATE="https://github.com/dogukan1047/ml-boilerplate.git"
                ;;
              "custom")
                TEMPLATE="https://github.com/dogukan1047/custom-boilerplate.git"
                ;;
              *)
                echo "Error: Invalid project_type in $JSON_FILE"
                exit 1
                ;;
            esac

            # Cookiecutter config'i oluştur
            echo "project_name: $PROJECT_NAME" > config.yaml
            echo "description: $DESCRIPTION" >> config.yaml
            echo "author: $AUTHOR" >> config.yaml
            echo "project_type: $PROJECT_TYPE" >> config.yaml

            # Debug: Config dosyasını göster
            echo "Config file content:"
            cat config.yaml

            # Proje üret (output_dir olmadan, direkt kök dizine)
            cookiecutter --no-input --config-file config.yaml "$TEMPLATE"
            
            # Debug: Üretilen dosyaları listele
            echo "Generated files:"
            ls -R "$PROJECT_NAME"

            # Repo oluştur (herhangi bir argümanla, --confirm yerine)
            gh repo create "$PROJECT_NAME" --public --description "$DESCRIPTION"

            # Dosyaları push et
            cd "$PROJECT_NAME" || { echo "Error: Directory $PROJECT_NAME not found"; exit 1; }
            git init
            git add .
            git commit -m "Initial commit from boilerplate"
            git remote add origin "https://github.com/dogukan1047/$PROJECT_NAME.git"
            git branch -M main
            git push -u origin main

            # Geri dön
            cd ..
          else
            echo "No JSON files found"
            exit 0
          fi
        done
